<!-- Include Converters -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:uiconverters="clr-namespace:BackupMaker.UIKit.Converters"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- BUTTON BASE TEMPLATE -->

    <!-- Include UIBasics.xaml -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Basics/UIBasics.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- Bases Definition -->
    <sys:Double x:Key="Button.Height">41</sys:Double>
    <sys:Double x:Key="Button.Small.Height">30</sys:Double>
    <sys:Double x:Key="Button.Large.Height">60</sys:Double>

    <SolidColorBrush x:Key="Button.Foreground" Color="{StaticResource Shade100Color}"/>
    <Thickness x:Key="Button.Padding">18,0</Thickness>

    <DropShadowEffect x:Key="Button.Shadow" Direction="315" ShadowDepth="4" BlurRadius="12" Color="{StaticResource Shade600Color}"/>
    <DropShadowEffect x:Key="Button.Hover.Shadow" Direction="315" ShadowDepth="4" BlurRadius="12" Color="{StaticResource Shade800Color}"/>
    <DropShadowEffect x:Key="Button.Pressed.Shadow" Direction="315" ShadowDepth="4" BlurRadius="12" Color="{StaticResource Shade900Color}"/>
    <DropShadowEffect x:Key="Button.Disabled.Shadow" Direction="315" ShadowDepth="4" BlurRadius="12" Color="{StaticResource Shade300Color}"/>

    <SolidColorBrush x:Key="Button.Disabled.Background" Color="{StaticResource DisabledBackgroundColor}"/>
    <SolidColorBrush x:Key="Button.Disabled.BorderBrush" Color="{StaticResource DisabledBorderColor}"/>
    <SolidColorBrush x:Key="Button.Disabled.Text.Foreground" Color="{StaticResource DisabledTextColor}"/>

    <!-- Define ColorBrightnessConverter -->
    <uiconverters:ColorBrightnessConverter x:Key="ColorBrightnessConverter"/>
    <uiconverters:DoubleMultiplierConverter x:Key="DoubleMultiplierConverter"/>


    <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type ButtonBase}">
        <Border x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" BorderThickness="{TemplateBinding BorderThickness}" Effect="{StaticResource Button.Shadow}"
                CornerRadius="{Binding Height, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DoubleMultiplierConverter}, ConverterParameter=0.25}">
            <Border.BorderBrush>
                <SolidColorBrush Color="{Binding Background.Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorBrightnessConverter}, ConverterParameter=0.95}"/>
            </Border.BorderBrush>
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border">
                    <Setter.Value>
                        <SolidColorBrush Color="{Binding Background.Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorBrightnessConverter}, ConverterParameter=0.9}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" TargetName="border">
                    <Setter.Value>
                        <SolidColorBrush Color="{Binding Background.Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorBrightnessConverter}, ConverterParameter=0.85}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect" TargetName="border" Value="{StaticResource Button.Hover.Shadow}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border">
                    <Setter.Value>
                        <SolidColorBrush Color="{Binding Background.Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorBrightnessConverter}, ConverterParameter=0.8}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" TargetName="border">
                    <Setter.Value>
                        <SolidColorBrush Color="{Binding Background.Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorBrightnessConverter}, ConverterParameter=0.7}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect" TargetName="border" Value="{StaticResource Button.Pressed.Shadow}"/>
                <!-- Translate the button -->
                <Setter Property="RenderTransform" TargetName="border">
                    <Setter.Value>
                        <TranslateTransform X="2" Y="2"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.BorderBrush}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Text.Foreground}"/>
                <Setter Property="Effect" TargetName="border" Value="{StaticResource Button.Disabled.Shadow}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Define template for all buttons by default -->
    <Style x:Key="ButtonBaseStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="{StaticResource Button.Height}"/>
        <Setter Property="Padding" Value="{StaticResource Button.Padding}"/>
        <Setter Property="BorderThickness" Value="1.8"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource Button.Foreground}"/>
        <Setter Property="FontSize" Value="{StaticResource ButtonFontSizeMedium}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
    </Style>
    <!-- END - BUTTON BASE TEMPLATE -->
    
    <!-- PRIMARY STYLE -->
    <SolidColorBrush x:Key="ButtonPrimary.Background" Color="{StaticResource PrimaryColor}"/>
    <Style x:Key="ButtonPrimaryStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{StaticResource ButtonPrimary.Background}"/>
    </Style>

    <!-- Define Primary Style as base style for every button -->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimaryStyle}"></Style>
    
    <!-- SECONDARY STYLE : TODO -->
    
    <!-- SUCCESS STYLE -->
    <SolidColorBrush x:Key="ButtonSuccess.Background" Color="{StaticResource SuccessColor}"/>
    <Style x:Key="ButtonSuccessStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{StaticResource ButtonSuccess.Background}"/>
    </Style>
    
    <!-- WARNING STYLE -->
    <SolidColorBrush x:Key="ButtonWarning.Background" Color="{StaticResource WarningColor}"/>
    <Style x:Key="ButtonWarningStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{StaticResource ButtonWarning.Background}"/>
    </Style>
    
    <!-- DANGER STYLE -->
    <SolidColorBrush x:Key="ButtonDanger.Background" Color="{StaticResource DangerColor}"/>
    <Style x:Key="ButtonDangerStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{StaticResource ButtonDanger.Background}"/>
    </Style>

</ResourceDictionary>