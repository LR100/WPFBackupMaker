<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cc="clr-namespace:WPFBackupMaker.UIKit"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Include UIBasics.xaml -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Basics/UIBasics.xaml"/>
        <ResourceDictionary Source="UIButton.xaml"/>
        <ResourceDictionary Source="UITextBox.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- Resources -->
    <DropShadowEffect x:Key="IconButton.Shadow" Direction="315" ShadowDepth="0.5" BlurRadius="10" Color="{StaticResource Shade400Color}" Opacity="0.3"/>
    <DropShadowEffect x:Key="IconButton.Hover.Shadow" Direction="315" ShadowDepth="0.5" BlurRadius="10" Color="{StaticResource Shade500Color}" Opacity="0.3"/>
    <DropShadowEffect x:Key="IconButton.Pressed.Shadow" Direction="315" ShadowDepth="0.5" BlurRadius="10" Color="{StaticResource Shade500Color}" Opacity="0.3"/>
    <DropShadowEffect x:Key="IconButton.Disabled.Shadow" Direction="315" ShadowDepth="0.5" BlurRadius="10" Color="{StaticResource Shade200Color}" Opacity="0.3"/>

    <!-- Template -->
    <ControlTemplate x:Key="IconButtonTemplate" TargetType="{x:Type cc:UIIconButton}">
        <Border Background="Transparent" VerticalAlignment="Center" HorizontalAlignment="Center" BorderThickness="0">
            <Viewbox Stretch="Uniform">
                <StackPanel Height="{TemplateBinding Height}" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent">
                    <Viewbox Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0">
                        <Path Data="{TemplateBinding Icon}" Fill="{TemplateBinding Background}" x:Name="path"
                              Width="{TemplateBinding Height}" Height="{TemplateBinding Height}" Effect="{StaticResource IconButton.Shadow}"
                              Stretch="Uniform" Stroke="Transparent" StrokeThickness="1"/>
                    </Viewbox>
                </StackPanel>
            </Viewbox>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="path">
                    <Setter.Value>
                        <SolidColorBrush Color="{Binding Background.Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorBrightnessConverter}, ConverterParameter=0.9}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Stroke" TargetName="path">
                    <Setter.Value>
                        <SolidColorBrush Color="{Binding Background.Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorBrightnessConverter}, ConverterParameter=0.85}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect" TargetName="path" Value="{StaticResource IconButton.Hover.Shadow}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Fill" TargetName="path">
                    <Setter.Value>
                        <SolidColorBrush Color="{Binding Background.Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorBrightnessConverter}, ConverterParameter=0.8}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Stroke" TargetName="path">
                    <Setter.Value>
                        <SolidColorBrush Color="{Binding Background.Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorBrightnessConverter}, ConverterParameter=0.7}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect" TargetName="path" Value="{StaticResource IconButton.Pressed.Shadow}"/>
                <!-- Translate the button -->
                <Setter Property="RenderTransform" TargetName="path">
                    <Setter.Value>
                        <TranslateTransform X="2" Y="2"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="path" Value="{StaticResource Button.Disabled.Background}"/>
                <Setter Property="Stroke" TargetName="path" Value="{StaticResource Button.Disabled.BorderBrush}"/>
                <Setter Property="Effect" TargetName="path" Value="{StaticResource IconButton.Disabled.Shadow}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- BASE Style -->
    <Style x:Key="IconButtonBaseStyle" TargetType="{x:Type cc:UIIconButton}">
        <Setter Property="Height" Value="{StaticResource TextBox.Height}"/>
        <Setter Property="Template" Value="{StaticResource IconButtonTemplate}"/>
    </Style>

    <!-- PRIMARY Style -->
    <SolidColorBrush x:Key="IconButtonPrimary.Background" Color="{StaticResource PrimaryColor}"/>
    <Style x:Key="IconButtonPrimaryStyle" TargetType="{x:Type cc:UIIconButton}" BasedOn="{StaticResource IconButtonBaseStyle}">
        <Setter Property="Background" Value="{StaticResource IconButtonPrimary.Background}"/>
    </Style>

    <!-- SUCCESS Style -->
    <SolidColorBrush x:Key="IconButtonSuccess.Background" Color="{StaticResource SuccessColor}"/>
    <Style x:Key="IconButtonSuccessStyle" TargetType="{x:Type cc:UIIconButton}" BasedOn="{StaticResource IconButtonBaseStyle}">
        <Setter Property="Background" Value="{StaticResource IconButtonSuccess.Background}"/>
    </Style>

    <!-- WARNING Style -->
    <SolidColorBrush x:Key="IconButtonWarning.Background" Color="{StaticResource WarningColor}"/>
    <Style x:Key="IconButtonWarningStyle" TargetType="{x:Type cc:UIIconButton}" BasedOn="{StaticResource IconButtonBaseStyle}">
        <Setter Property="Background" Value="{StaticResource IconButtonWarning.Background}"/>
    </Style>

    <!-- DANGER Style -->
    <SolidColorBrush x:Key="IconButtonDanger.Background" Color="{StaticResource DangerColor}"/>
    <Style x:Key="IconButtonDangerStyle" TargetType="{x:Type cc:UIIconButton}" BasedOn="{StaticResource IconButtonBaseStyle}">
        <Setter Property="Background" Value="{StaticResource IconButtonDanger.Background}"/>
    </Style>


    <!-- Set Default Style -->
    <Style TargetType="{x:Type cc:UIIconButton}" BasedOn="{StaticResource IconButtonPrimaryStyle}"/>

</ResourceDictionary>