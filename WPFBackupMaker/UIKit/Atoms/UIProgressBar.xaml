<!-- Include Converters -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:uiconverters="clr-namespace:BackupMaker.UIKit.Converters"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Include UIBasics.xaml -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Basics/UIBasics.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <sys:Double x:Key="ProgressBar.Height">26</sys:Double>
    <SolidColorBrush x:Key="ProgressBar.Foreground" Color="{StaticResource SuccessColor}"/>
    <SolidColorBrush x:Key="ProgressBar.Background" Color="{StaticResource Shade200Color}"/>
    <SolidColorBrush x:Key="ProgressBar.BorderBrush" Color="{StaticResource Shade600Color}"/>
    <Thickness x:Key="ProgressBar.BorderThickness">1.5</Thickness>
    <sys:Double x:Key="ProgressBar.CornerRadiusValue">5</sys:Double>
    <CornerRadius x:Key="ProgressBar.CornerRadius" TopLeft="{StaticResource ProgressBar.CornerRadiusValue}" TopRight="{StaticResource ProgressBar.CornerRadiusValue}"
                  BottomLeft="{StaticResource ProgressBar.CornerRadiusValue}" BottomRight="{StaticResource ProgressBar.CornerRadiusValue}"/>
    <!-- Progress Bar -->
    <ControlTemplate x:Key="ProgressBarTemplate" TargetType="{x:Type ProgressBar}">
        <Grid x:Name="TemplateRoot">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Determinate"/>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard RepeatBehavior="Forever">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                            </DoubleAnimationUsingKeyFrames>
                            <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                            </PointAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource ProgressBar.CornerRadius}"/>
            <Rectangle x:Name="PART_Track"/>
            <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left" Margin="3.5, 3">
                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" Stroke="{TemplateBinding Foreground}" RadiusX="5" RadiusY="5"/>
                <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" Stroke="{TemplateBinding Foreground}" RadiusX="5" RadiusY="5">
                    <Rectangle.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Rectangle.RenderTransform>
                </Rectangle>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                    <Setter.Value>
                        <RotateTransform Angle="-90"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsIndeterminate" Value="true">
                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!-- Progress Bar Style -->
    <Style x:Key="ProgressBarStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Template" Value="{StaticResource ProgressBarTemplate}"/>
        <Setter Property="Foreground" Value="{StaticResource ProgressBar.Foreground}"/>
        <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.BorderBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource ProgressBar.BorderThickness}"/>
        <Setter Property="Height" Value="{StaticResource ProgressBar.Height}"/>
    </Style>


</ResourceDictionary>